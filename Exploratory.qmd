---
title: "Exploratory"
format: html
editor: visual
---

## Libraries

Here we install all the packages needed on local, if they are not installed before.

```{r}
packages_to_install <- c("tidytuesdayR", "dplyr", "tidyr", "ggmap", "rworldmap", "plotly", "readr", "ggplot2", "rnaturalearth", "sf", "RColorBrewer", "ggrepel", "stringr")

for (package in packages_to_install) { if (!requireNamespace(package, quietly = TRUE)) { install.packages(package) } }
```

```{r}
library("tidytuesdayR")
library("dplyr")
library("tidyr")
library("ggmap")
library("rworldmap")
library("plotly")
library("readr")
library(ggplot2)
library(rnaturalearth)
library(sf)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(stringr)
```

## Loading Data

I have found 3 different datasets for this project:

<https://github.com/owid/energy-data?tab=readme-ov-file>

<https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-06/readme.md>

<https://www.energyinst.org/statistical-review/resources-and-data-downloads>

There is a codebook explaining every column:

<https://github.com/owid/energy-data/blob/master/owid-energy-codebook.csv>

For the final product, a final dataset will be chosen and downloaded in the product for the user.

```{r}
# owid_energy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-06/owid-energy.csv')
owid_energy <- read_csv("data/owid-energy.csv")
owid_energy_data <- read_csv("data/owid-energy-data.csv")
stat_data <- read_csv("data/Statistical Review of World Energy Narrow File.csv")
```

```{r}
colnames(owid_energy)
```

## Maps

Maps can be a good representation of the change in different energy consumption during different years for different countries/regions. Here I used Nuclear power consumption per capita for the years 2020 and 2019. I decided not to use Maps for my final product, because other kinds of plots seem better than maps.

```{r}
nuclear_data2020 <- owid_energy |> 
  filter(year=="2020") |> 
  select(country, contains("nuclear")) 
  
nuclear_data2019 <- owid_energy |> 
  filter(year=="2019") |> 
  select(country, contains("nuclear")) 


world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- left_join(world, nuclear_data2020, by = c("name" = "country"))

ggplot(data = world_data) +
  geom_sf(aes(fill = nuclear_energy_per_capita)) +
  scale_fill_viridis_c() +
  theme_minimal() +
  labs(fill = "Nuclear Energy", 
       title = "Nuclear power consumption per capita 2020")

world_data <- left_join(world, nuclear_data2019, by = c("name" = "country"))

ggplot(data = world_data) +
  geom_sf(aes(fill = nuclear_energy_per_capita)) +
  scale_fill_viridis_c() +
  theme_minimal() +
  labs(fill = "Nuclear Energy", 
       title = "Nuclear power consumption per capita 2019")

```

## Greenhouse gas emissions vs GDP

```{r}
owid_energy |> 
  filter(country == "China") |> 
  drop_na(gdp, greenhouse_gas_emissions) |> 
  ggplot() + 
  aes(x = gdp, y = greenhouse_gas_emissions, color = year) +
  geom_point() + 
  labs(title = "greenhouse gas emissions vs gdp for China") +
  theme_minimal()
```

```{r}
owid_energy |> 
  filter(country == "Russia") |> 
  drop_na(gdp, greenhouse_gas_emissions) |> 
  ggplot() + 
  aes(x = gdp, y = greenhouse_gas_emissions, color = year) +
  geom_point() + 
  labs(title = "greenhouse gas emissions vs gdp for Russia") +
  theme_minimal()
```

```{r}
df <- owid_energy |> 
  filter(year == "2018" & country != "World") |> 
  mutate(
    gdp_per_capita = gdp / population,
    greenhouse_gas_emissions_per_capita = greenhouse_gas_emissions / population
  ) |> 
  drop_na(gdp_per_capita, greenhouse_gas_emissions_per_capita)
  
df <- df |> 
  mutate(continent = countrycode(country, "country.name", "continent")) |> drop_na(gdp_per_capita, greenhouse_gas_emissions_per_capita, population, continent)

df <- df |>
  mutate(label = ifelse(country %in% c("United States", "China", "India", "Germany", "Qatar", "United Arab Emirates", "Norway", "Luxembourg", "Finland", "Nigeria", "Canada", "Iran", "Ethiopia", "Mozambique", "Russia"), country, NA))

custom_colors <- c("Asia" = "#1f78b4", "Africa" = "#33a02c", "Europe" = "#e31a1c", 
                   "Americas" = "#ff7f00", "Oceania" = "#6a3d9a")

ggplot(df, aes(x = gdp_per_capita, y = greenhouse_gas_emissions_per_capita, size = population, color = continent)) +
  geom_point(alpha = 0.7) +
  geom_text(aes(label = label), size = 2.5, hjust=0.5, vjust=1) +
  scale_size_continuous(range = c(1, 15)) +
  scale_color_manual(values = custom_colors) + 
  scale_x_log10() +
  theme_minimal() +
  labs(
    title = "Emissions from electricity generation per capita vs. GDP per capita, 2018",
    x = "(international $)",
    y = "(tonnes)",
    size = "Population",
    color = "Continent"
  ) +
  theme(legend.position = "right")


```

```{r}

highlight_countries <- c("United States", "China", "India", "Germany", "Qatar", 
                         "United Arab Emirates", "Norway", "Luxembourg", 
                         "Canada", "Iran", "Ethiopia", "Mozambique", "Russia")


df <- owid_energy |> 
  filter(year == 2018, country != "World") |> 
  mutate(
    gdp_per_capita = gdp / population,
    greenhouse_gas_emissions_per_capita = greenhouse_gas_emissions / population,
    highlight = ifelse(country %in% highlight_countries, TRUE, FALSE), 
    label = ifelse(highlight, as.character(country), NA)  
  ) |> 
  drop_na(gdp_per_capita, greenhouse_gas_emissions_per_capita) |> 
  mutate(
    continent = countrycode(country, "country.name", "continent")
  ) |> 
  drop_na(continent) 


custom_colors <- c("Asia" = "#1f78b4", "Africa" = "#33a02c", "Europe" = "#e31a1c", 
                   "Americas" = "#ff7f00", "Oceania" = "#6a3d9a")


ggplot(df, aes(x = gdp_per_capita, y = greenhouse_gas_emissions_per_capita, size = population)) +
  geom_point(aes(color = continent), alpha = 0.3) + 
  geom_point(data = df %>% filter(highlight), aes(color = continent), alpha = 0.7) +  
  geom_text_repel(
    aes(label = label, color = continent),
    size = 3.5,
    box.padding = unit(0.35, "lines"),
    point.padding = unit(0.5, "lines"),
    segment.color = "white"
  ) +
  scale_size_continuous(range = c(1, 15)) +
  scale_color_manual(values = custom_colors) +
  scale_x_log10() +
  theme_minimal() +
  labs(
    x = "GDP per capita (international $)",
    y = "Emissions per capita (tonnes)",
    size = "Population",
    color = "Continent"
  ) +
  theme(legend.position = "right") +
  guides(color = guide_legend(override.aes = list(alpha = 1))) 

```

## Electricity Generation by Country

```{r}
fig <- plot_ly(
  data = owid_energy,
  x = ~country,
  y = ~electricity_generation,
  type = "bar",
  marker = list(color = "blue")
)

fig <- fig |>  layout(title = "Electricity Generation by Country")

fig
```

### ideas

with this plot I realized that in the country column we have individual countries (like Afghanistan, Albania, Algeria, etc.), regions (such as Africa, Asia, Europe), specific groupings or categories (like OECD, OPEC, High-income countries), and even historical or special entities (such as USSR, East Germany).

so one idea is to compare between aforementioned groups, the other idea is to analyse different types of energy such as:

```         
biofuel
coal
electricity
Primary energy
fossil fuel
gas 
hydropower 
low-carbon energy
nuclear power
oil
renewable
solar power
wind power
```

```{r}
unique(owid_energy$country)
```

## Solar Energy Consumption Trends

```{r}
Selected_Countries <- c("Germany", "United States", "China")

filtered_energy_data <- owid_energy |>
  filter(country %in% Selected_Countries) |>
  select(country, year, solar_consumption) |>
  pivot_longer(cols = solar_consumption, 
               names_to = "energy_type", values_to = "consumption")

plot <- filtered_energy_data |>
  plot_ly(x = ~year, y = ~consumption, color = ~country, 
          type = 'scatter', mode = 'lines+markers',
          text = ~paste("Country:", country, "<br>", "Year:", year, "<br>", "Solar Consumption:", consumption),
          hoverinfo = "text") |>
  layout(title = "Solar Energy Consumption Trends",
         xaxis = list(title = "Year", tickangle = 90),
         yaxis = list(title = "Solar Energy Consumption (TWh)"),
         colorway = RColorBrewer::brewer.pal(3, "Dark2"))

plot
```

## Renewable Energy Consumption Trends

```{r}
Selected_Country <- "Germany"

filtered_energy_data <- owid_energy |>
  filter(country == Selected_Country) |>
  select(year, solar_consumption, wind_consumption, biofuel_consumption, other_renewable_consumption, hydro_consumption) |>
  pivot_longer(cols = c(solar_consumption, wind_consumption, biofuel_consumption, other_renewable_consumption, hydro_consumption), 
               names_to = "energy_type", values_to = "consumption")

plot <- filtered_energy_data |>
  plot_ly(x = ~year, y = ~consumption, color = ~energy_type, 
          type = 'scatter', mode = 'lines+markers',
          text = ~paste("Year:", year, "<br>", "Consumption:", consumption),
          hoverinfo = "text") |>
  layout(title = sprintf("Renewable Energy Consumption Trends in the %s", Selected_Country),
         xaxis = list(title = "Year", tickangle = 90, rangeselector = list(buttons = list(list(count = 1, label = "1y", step = "year", stepmode = "backward"), list(count = 5, label = "5y", step = "year", stepmode = "backward"), list(step = "all"))), rangeslider = list(type = "date")),
         yaxis = list(title = "Energy Consumption (TWh)"),
         colorway = RColorBrewer::brewer.pal(5, "Dark2"))

plot
```

```{r}
Selected_Countries <- c("Germany", "United States", "China")

filtered_energy_data <- owid_energy |>
  filter(country %in% Selected_Countries) |>
  select(country, year, solar_consumption, wind_consumption, biofuel_consumption, other_renewable_consumption, hydro_consumption) |>
  pivot_longer(cols = -c(country, year), names_to = "energy_type", values_to = "consumption")

ggplot(filtered_energy_data, aes(x = year, y = consumption, fill = energy_type)) +
  geom_area(position = 'stack') +
  facet_wrap(~ country) +
  labs(title = "Energy Consumption by Type",
       x = "Year",
       y = "Energy Consumption (TWh)",
       fill = "Energy Type") +
  theme_minimal()
```

```{r}
data_2020 <- owid_energy |> 
  filter(year == 2018, !is.na(gdp), !is.na(electricity_demand), !is.na(population), country != "World") |> 
  mutate(size = sqrt(population * 3e-06)) 

colors <- c('#4AC6B7', '#1972Ahttp://127.0.0.1:11609/chunk_output/003E9CB3be1378a0/A1B59D9B/crjylkplenfnm/000010.png4', '#965F8A', '#FF7070', '#C61951')

fig <- plot_ly(data_2020, x = ~gdp, y = ~electricity_demand, type = 'scatter', mode = 'markers',
               marker = list(size = ~size, sizemode = 'diameter', line = list(width = 2, color = '#FFFFFF')),
               text = ~paste('Country:', country, '<br>Electricity Demand:', electricity_demand, '<br>GDP:', gdp,
                             '<br>Population:', population)) |> 
  layout(title = 'Electricity Demand vs GDP',
         xaxis = list(title = 'GDP', type = 'log'),
         yaxis = list(title = 'Electricity Demand (TWh)'),
         plot_bgcolor = 'rgb(243, 243, 243)')

fig
```

## OECD Vs Non-OECD

```{r}
owid_energy |> 
  filter(country %in% c("OECD (EIA)", "Non-OECD (EIA)")) |> 
  ggplot(aes(x = year, y = energy_cons_change_pct, fill = country)) +
    geom_bar(stat = "identity", position = "stack") +
    theme_minimal()
```

```{r}
primary_ej_data <- stat_data |> 
  filter(Var == "primary_ej") |> 
  mutate(OECD_status = ifelse(OECD == 1, "OECD", "Non-OECD")) |> 
  filter(!is.na(OECD_status)) 

primary_ej_data$OECD_status <- as.factor(primary_ej_data$OECD_status)

annual_data <- primary_ej_data |> 
  group_by(Year, OECD_status) |> 
  summarise(Total = sum(Value, na.rm = TRUE), .groups = 'drop')

ggplot(annual_data, aes(x = Year, y = Total, fill = OECD_status)) +
  geom_bar(stat = "identity", position = "stack") +
  theme_minimal() +
  labs(title = "Change in primary energy (EJ) by OECD status", 
       x = "Year", 
       y = "Primary energy (EJ)")

```

```{r}
Var_to_select <- c("oilcons_ej", "nuclear_ej", "coalcons_ej", "hydro_ej", "solar_ej", "wind_ej")

energy_type <- stat_data |> 
  filter(Var %in% Var_to_select) |> 
  group_by(Year, Var) |> 
  summarise(Total = sum(Value, na.rm = TRUE), .groups = 'drop')

ggplot(energy_type, aes(x = Year, y = Total, fill = Var)) +
  geom_bar(stat = "identity", position = "stack") +
  theme_minimal() +
  labs(title = "Change in primary energy (EJ) by OECD status", 
       x = "Year", 
       y = "Primary energy (EJ)")
```

### How much of the country's electricity comes from renewables?

```{r}
filtered_data <- owid_energy |> 
  select(year, country, matches("_electricity$"), -other_renewable_exc_biofuel_electricity, -other_renewable_electricity, -per_capita_electricity)
colnames(filtered_data)
```

## Income Groups

in the owid-energy dataset, in country column we have different income groups such as:

```         
"L": "Low-income countries"
    "H": "High-income countries"
    "UM": "Upper-middle-income countries"
    "LM": "Lower-middle-income countries"
```

source of pyhton code that did this grouping for owid data: <https://github.com/owid/etl/blob/master/etl/steps/data/garden/wb/2023-04-30/income_groups.py>

```{r}
owid_energy |> 
   filter(country %in% c("Upper-middle-income countries", 
                        "Low-income countries", 
                        "High-income countries", 
                        "Lower-middle-income countries"))
```

```{r}
library(dplyr)
library(tidyr)
library(ggplot2)
  

custom_colors <- c(
  "biofuel" = "#ff7f00",
  "coal" = "#1f78b4",
  "fossil" = "#ffff99",
  "gas" = "#e31a1c",
  "hydro" = "#6a3d9a",
  "low_carbon" = "#b2df8a",
  "nuclear" = "#fdbf6f",
  "oil" = "#cab2d6",
  "solar" = "#a6cee3",
  "wind" = "#fb9a99"
)

income_groups_data_2018 <- owid_energy |>
  filter(year == 2018,
         country %in% c("Upper-middle-income countries",
                        "Low-income countries",
                        "High-income countries",
                        "Lower-middle-income countries")) |>
  select(country, biofuel_electricity, coal_electricity, fossil_electricity, gas_electricity,
         hydro_electricity, low_carbon_electricity, nuclear_electricity,
         oil_electricity, solar_electricity, wind_electricity) |>
  na.omit()

income_groups_generation <- income_groups_data_2018 |>
  group_by(country) |>
  summarise(across(biofuel_electricity:wind_electricity, ~ sum(.x, na.rm = TRUE))) |>
  pivot_longer(-country, names_to = "source", values_to = "generation")

income_groups_generation$source <- str_replace(income_groups_generation$source, "_electricity", "")

ggplot(income_groups_generation, aes(x = country, y = generation, fill = source)) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_manual(values = custom_colors) +
  labs(x = "Income Group",
       y = "Electricity Generation (TWh)",
       fill = "Source") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))



```

```{r}
custom_palette <- c("#e6194b", "#3cb44b", "#ffe119", "#4363d8", "#f58231",
                    "#911eb4", "#46f0f0", "#f032e6", "#bcf60c", "#fabebe",
                    "#008080", "#e6beff")

selected_palette <- brewer.pal(name = "Paired", n=12)

total_generation <- income_groups_generation |> 
  group_by(country) |> 
  summarise(total_generation = sum(generation))

dodge_width <- 0.9

ggplot() +
  geom_bar(data = income_groups_generation, 
           aes(x = country, y = generation, fill = source), 
           stat = "identity", 
           position = position_dodge(width = dodge_width), 
           width = dodge_width / 1.5) +
  geom_bar(data = total_generation, 
           aes(x = country, y = total_generation, group = country), 
           stat = "identity", 
           fill = "grey", alpha = 0.3, 
           width = dodge_width) +
  scale_fill_manual(values = selected_palette) +
  coord_flip() +
  labs(x = "Income Group", 
       y = "Electricity Generation (TWh)", 
       fill = "Source") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}

```

```{r}

```

```{r}

asian_regions <- c("Asia", "South Africa", "Europe", 
                   "Oceania", "South America", "North America")

# Filter for the year 2018 and specific Asian regions
asian_data_2018 <- owid_energy %>%
  filter(year == 2018, country %in% asian_regions) %>%
  select(country, oil_production, oil_consumption,
         gas_production, gas_consumption,
         coal_production, coal_consumption) %>%
  na.omit()

# Reshape data into long format
asian_data_long <- asian_data_2018 %>%
  pivot_longer(cols = -country, names_to = "type", values_to = "amount")

# Plot a stacked bar plot
ggplot(asian_data_long, aes(x = country, y = amount, fill = type)) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_viridis_d() +
  labs(x = "Region/Country", 
       y = "Production and Consumption", 
       fill = "Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels

```

```{r}


```
